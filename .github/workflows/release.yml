name: Package and Release

on:
  push:
    tags:
      - '**'
    branches:
      - alpha

env:
  CF_API_KEY: ${{ secrets.CF_API_KEY }}
  WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
  WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
  GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
  DISCORD_WEBHOOK: https://discord.com/api/webhooks/1404939800921899048/rZZbVLou6M4kqNuCIwYPcNDK9W_qRC5duF-xXgBgmSxf5TU--sYfOEO14LOLDB3g1_JJ

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config --global user.name "donniedice"
          git config --global user.email "donniedice@protonmail.com"
          
      - name: Set Release Type
        id: set_release_type
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG_NAME=${{ github.ref }}
            if [[ "$TAG_NAME" == *"beta"* ]]; then
              echo "release_type=beta" >> $GITHUB_OUTPUT
            elif [[ "$TAG_NAME" == *"alpha"* ]]; then
              echo "release_type=alpha" >> $GITHUB_OUTPUT
            else
              echo "release_type=release" >> $GITHUB_OUTPUT
            fi
          else
            echo "release_type=alpha" >> $GITHUB_OUTPUT
          fi

      - name: Extract Version from TOC
        id: extract_version
        run: |
          version=$(grep -oP '^## Version: \K(.*)' ./*.toc)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "timestamp=$(date -u +%Y-%m-%dT%H:%M:%S.000Z)" >> $GITHUB_OUTPUT

      - name: Package and Release
        uses: BigWigsMods/packager@master
        with:
          release-type: ${{ steps.set_release_type.outputs.release_type }}

      - name: Send Discord Success Notification
        if: success() && steps.set_release_type.outputs.release_type == 'release'
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "content": "**CCU ${{ steps.extract_version.outputs.version }}** has been released!\n<https://www.curseforge.com/wow/addons/ccu-coordination-cloak-utility>"
            }' https://discord.com/api/webhooks/1404939800921899048/rZZbVLou6M4kqNuCIwYPcNDK9W_qRC5duF-xXgBgmSxf5TU--sYfOEO14LOLDB3g1_JJ

      - name: Send Discord Beta Notification
        if: success() && steps.set_release_type.outputs.release_type == 'beta'
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "content": "**CCU ${{ steps.extract_version.outputs.version }}-beta** is available for testing!\n<https://www.curseforge.com/wow/addons/ccu-coordination-cloak-utility>"
            }' https://discord.com/api/webhooks/1404939800921899048/rZZbVLou6M4kqNuCIwYPcNDK9W_qRC5duF-xXgBgmSxf5TU--sYfOEO14LOLDB3g1_JJ

      - name: Send Discord Alpha Notification
        if: success() && steps.set_release_type.outputs.release_type == 'alpha'
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "content": "**CCU ${{ steps.extract_version.outputs.version }}-alpha** development build available"
            }' https://discord.com/api/webhooks/1404939800921899048/rZZbVLou6M4kqNuCIwYPcNDK9W_qRC5duF-xXgBgmSxf5TU--sYfOEO14LOLDB3g1_JJ

      - name: Send Discord Failure Notification
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "content": "**CCU build failed!** Check workflow: <https://github.com/DonnieDice/CoordinationCloakUtility/actions/runs/${{ github.run_id }}>"
            }' https://discord.com/api/webhooks/1404939800921899048/rZZbVLou6M4kqNuCIwYPcNDK9W_qRC5duF-xXgBgmSxf5TU--sYfOEO14LOLDB3g1_JJ

      - name: Parse Changelog
        if: ${{ steps.set_release_type.outputs.release_type != 'alpha' }}
        run: |
          # Your existing changelog parsing logic
